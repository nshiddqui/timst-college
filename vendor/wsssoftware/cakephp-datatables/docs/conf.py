#-*- coding: utf-8 -*-
import datetime
import os
import sys
import cakephp_theme
from sphinx.highlighting import lexers
from pygments.lexers.php import PhpLexer


# -- Project information -----------------------------------------------------

maintainer = u'wsssoftware'
project = u'cakephp-upload'
project_pretty_name = u'CakePHP Upload'
copyright = u'%d, WSS Software' % datetime.datetime.now().year
version = '4.0.0'
release = '4.0.0'
html_title = 'CakePHP DataTables'
author = 'WSS Software'
branch = 'master'

htmlhelp_basename = 'cakephp-datatables'

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.todo',
    'sphinx.ext.githubpages',
    'sphinxcontrib.phpdomain',
    'cakephp_theme'
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'
# The master toctree document.
master_doc = 'genindex'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path .
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'
highlight_language = 'php'


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
html_sidebars = {
    '**': ['globaltoc.html', 'localtoc.html']
}
html_theme_path = [cakephp_theme.get_html_theme_path()]
html_theme = 'cakephp_theme'
html_context = {
    'maintainer': maintainer,
    'project_pretty_name': project_pretty_name,
    'projects': {
        'CakePHP Book': 'https://book.cakephp.org/',
    },
    'community': {
        'Stack Overflow': 'http://stackoverflow.com/tags/cakephp',
        'Slack': 'http://cakesf.herokuapp.com/',
        'Email Support': 'mailto:allan@wsssoftware.com.br?subject=CakePHP DataTables Support',
        'GitHub repo': 'https://github.com/wsssoftware/cakephp-datatables',
    },
}

lexers['php'] = PhpLexer(startinline=True)
lexers['phpinline'] = PhpLexer(startinline=True)
lexers['php-annotations'] = PhpLexer(startinline=True)
primary_domain = "php"

rst_epilog = """
.. |phpversion| replace:: **7.4**
.. |minphpversion| replace:: 7.2
"""